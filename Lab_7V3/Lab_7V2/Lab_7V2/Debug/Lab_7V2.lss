
Lab_7V2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  00000b26  00000bba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b26  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800116  00800116  00000bd0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000bd0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c00  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bd0  00000000  00000000  00000c78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a47  00000000  00000000  00001848  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000439  00000000  00000000  0000228f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c8  00000000  00000000  000026c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000052e  00000000  00000000  00002790  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000020d  00000000  00000000  00002cbe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00002ecb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 9b 00 	jmp	0x136	; 0x136 <__ctors_end>
   4:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
   8:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
   c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  10:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  14:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  18:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  1c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  20:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  24:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  28:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  2c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  30:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  34:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__vector_13>
  38:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  3c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  40:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  44:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  48:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  4c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  50:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  54:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  58:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  5c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  60:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  64:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  68:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  6c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  70:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  74:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  78:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  7c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  80:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  84:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  88:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  8c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  90:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  94:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  98:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  9c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  a0:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  a4:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  a8:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  ac:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  b0:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  b4:	07 63       	ori	r16, 0x37	; 55
  b6:	42 36       	cpi	r20, 0x62	; 98
  b8:	b7 9b       	sbis	0x16, 7	; 22
  ba:	d8 a7       	std	Y+40, r29	; 0x28
  bc:	1a 39       	cpi	r17, 0x9A	; 154
  be:	68 56       	subi	r22, 0x68	; 104
  c0:	18 ae       	std	Y+56, r1	; 0x38
  c2:	ba ab       	std	Y+50, r27	; 0x32
  c4:	55 8c       	ldd	r5, Z+29	; 0x1d
  c6:	1d 3c       	cpi	r17, 0xCD	; 205
  c8:	b7 cc       	rjmp	.-1682   	; 0xfffffa38 <__eeprom_end+0xff7efa38>
  ca:	57 63       	ori	r21, 0x37	; 55
  cc:	bd 6d       	ori	r27, 0xDD	; 221
  ce:	ed fd       	.word	0xfded	; ????
  d0:	75 3e       	cpi	r23, 0xE5	; 229
  d2:	f6 17       	cp	r31, r22
  d4:	72 31       	cpi	r23, 0x12	; 18
  d6:	bf 00       	.word	0x00bf	; ????
  d8:	00 00       	nop
  da:	80 3f       	cpi	r24, 0xF0	; 240
  dc:	08 00       	.word	0x0008	; ????
  de:	00 00       	nop
  e0:	be 92       	st	-X, r11
  e2:	24 49       	sbci	r18, 0x94	; 148
  e4:	12 3e       	cpi	r17, 0xE2	; 226
  e6:	ab aa       	std	Y+51, r10	; 0x33
  e8:	aa 2a       	or	r10, r26
  ea:	be cd       	rjmp	.-1156   	; 0xfffffc68 <__eeprom_end+0xff7efc68>
  ec:	cc cc       	rjmp	.-1640   	; 0xfffffa86 <__eeprom_end+0xff7efa86>
  ee:	4c 3e       	cpi	r20, 0xEC	; 236
  f0:	00 00       	nop
  f2:	00 80       	ld	r0, Z
  f4:	be ab       	std	Y+54, r27	; 0x36
  f6:	aa aa       	std	Y+50, r10	; 0x32
  f8:	aa 3e       	cpi	r26, 0xEA	; 234
  fa:	00 00       	nop
  fc:	00 00       	nop
  fe:	bf 00       	.word	0x00bf	; ????
 100:	00 00       	nop
 102:	80 3f       	cpi	r24, 0xF0	; 240
 104:	00 00       	nop
 106:	00 00       	nop
 108:	00 08       	sbc	r0, r0
 10a:	41 78       	andi	r20, 0x81	; 129
 10c:	d3 bb       	out	0x13, r29	; 19
 10e:	43 87       	std	Z+11, r20	; 0x0b
 110:	d1 13       	cpse	r29, r17
 112:	3d 19       	sub	r19, r13
 114:	0e 3c       	cpi	r16, 0xCE	; 206
 116:	c3 bd       	out	0x23, r28	; 35
 118:	42 82       	std	Z+2, r4	; 0x02
 11a:	ad 2b       	or	r26, r29
 11c:	3e 68       	ori	r19, 0x8E	; 142
 11e:	ec 82       	std	Y+4, r14	; 0x04
 120:	76 be       	out	0x36, r7	; 54
 122:	d9 8f       	std	Y+25, r29	; 0x19
 124:	e1 a9       	ldd	r30, Z+49	; 0x31
 126:	3e 4c       	sbci	r19, 0xCE	; 206
 128:	80 ef       	ldi	r24, 0xF0	; 240
 12a:	ff be       	out	0x3f, r15	; 63
 12c:	01 c4       	rjmp	.+2050   	; 0x930 <__stack+0x31>
 12e:	ff 7f       	andi	r31, 0xFF	; 255
 130:	3f 00       	.word	0x003f	; ????
 132:	00 00       	nop
	...

00000136 <__ctors_end>:
 136:	11 24       	eor	r1, r1
 138:	1f be       	out	0x3f, r1	; 63
 13a:	cf ef       	ldi	r28, 0xFF	; 255
 13c:	d8 e0       	ldi	r29, 0x08	; 8
 13e:	de bf       	out	0x3e, r29	; 62
 140:	cd bf       	out	0x3d, r28	; 61

00000142 <__do_copy_data>:
 142:	11 e0       	ldi	r17, 0x01	; 1
 144:	a0 e0       	ldi	r26, 0x00	; 0
 146:	b1 e0       	ldi	r27, 0x01	; 1
 148:	e6 e2       	ldi	r30, 0x26	; 38
 14a:	fb e0       	ldi	r31, 0x0B	; 11
 14c:	02 c0       	rjmp	.+4      	; 0x152 <__do_copy_data+0x10>
 14e:	05 90       	lpm	r0, Z+
 150:	0d 92       	st	X+, r0
 152:	a6 31       	cpi	r26, 0x16	; 22
 154:	b1 07       	cpc	r27, r17
 156:	d9 f7       	brne	.-10     	; 0x14e <__do_copy_data+0xc>

00000158 <__do_clear_bss>:
 158:	21 e0       	ldi	r18, 0x01	; 1
 15a:	a6 e1       	ldi	r26, 0x16	; 22
 15c:	b1 e0       	ldi	r27, 0x01	; 1
 15e:	01 c0       	rjmp	.+2      	; 0x162 <.do_clear_bss_start>

00000160 <.do_clear_bss_loop>:
 160:	1d 92       	st	X+, r1

00000162 <.do_clear_bss_start>:
 162:	a8 31       	cpi	r26, 0x18	; 24
 164:	b2 07       	cpc	r27, r18
 166:	e1 f7       	brne	.-8      	; 0x160 <.do_clear_bss_loop>
 168:	0e 94 88 01 	call	0x310	; 0x310 <main>
 16c:	0c 94 91 05 	jmp	0xb22	; 0xb22 <_exit>

00000170 <__bad_interrupt>:
 170:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000174 <ShowDigit>:
		sei();
	}
}

void ShowDigit(uint8_t val_var, uint8_t loc_var)		//take in a 0-9 digit and display on portb
{
 174:	cf 93       	push	r28
 176:	df 93       	push	r29
 178:	cd b7       	in	r28, 0x3d	; 61
 17a:	de b7       	in	r29, 0x3e	; 62
 17c:	64 97       	sbiw	r28, 0x14	; 20
 17e:	0f b6       	in	r0, 0x3f	; 63
 180:	f8 94       	cli
 182:	de bf       	out	0x3e, r29	; 62
 184:	0f be       	out	0x3f, r0	; 63
 186:	cd bf       	out	0x3d, r28	; 61
	
	if (loc_var == 0)
 188:	61 11       	cpse	r22, r1
 18a:	03 c0       	rjmp	.+6      	; 0x192 <ShowDigit+0x1e>
	PORTB = 8;
 18c:	98 e0       	ldi	r25, 0x08	; 8
 18e:	95 b9       	out	0x05, r25	; 5
 190:	0e c0       	rjmp	.+28     	; 0x1ae <ShowDigit+0x3a>
	else if (loc_var == 1)
 192:	61 30       	cpi	r22, 0x01	; 1
 194:	19 f4       	brne	.+6      	; 0x19c <ShowDigit+0x28>
	PORTB = 4;
 196:	94 e0       	ldi	r25, 0x04	; 4
 198:	95 b9       	out	0x05, r25	; 5
 19a:	09 c0       	rjmp	.+18     	; 0x1ae <ShowDigit+0x3a>
	else if (loc_var == 2)
 19c:	62 30       	cpi	r22, 0x02	; 2
 19e:	19 f4       	brne	.+6      	; 0x1a6 <ShowDigit+0x32>
	PORTB = 2;
 1a0:	92 e0       	ldi	r25, 0x02	; 2
 1a2:	95 b9       	out	0x05, r25	; 5
 1a4:	04 c0       	rjmp	.+8      	; 0x1ae <ShowDigit+0x3a>
	else if (loc_var == 3)
 1a6:	63 30       	cpi	r22, 0x03	; 3
 1a8:	11 f4       	brne	.+4      	; 0x1ae <ShowDigit+0x3a>
	PORTB = 1;
 1aa:	91 e0       	ldi	r25, 0x01	; 1
 1ac:	95 b9       	out	0x05, r25	; 5
	
	int val_to_pat[10] = //10 = 0
 1ae:	94 e1       	ldi	r25, 0x14	; 20
 1b0:	e2 e0       	ldi	r30, 0x02	; 2
 1b2:	f1 e0       	ldi	r31, 0x01	; 1
 1b4:	de 01       	movw	r26, r28
 1b6:	11 96       	adiw	r26, 0x01	; 1
 1b8:	01 90       	ld	r0, Z+
 1ba:	0d 92       	st	X+, r0
 1bc:	9a 95       	dec	r25
 1be:	e1 f7       	brne	.-8      	; 0x1b8 <ShowDigit+0x44>
		0b00000111 ,
		0b01111111 ,
		0b01101111 ,	//9
		
	};
	PORTD = val_to_pat[val_var];
 1c0:	e8 2f       	mov	r30, r24
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	ee 0f       	add	r30, r30
 1c6:	ff 1f       	adc	r31, r31
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	8c 0f       	add	r24, r28
 1ce:	9d 1f       	adc	r25, r29
 1d0:	e8 0f       	add	r30, r24
 1d2:	f9 1f       	adc	r31, r25
 1d4:	80 81       	ld	r24, Z
 1d6:	8b b9       	out	0x0b, r24	; 11

};
 1d8:	64 96       	adiw	r28, 0x14	; 20
 1da:	0f b6       	in	r0, 0x3f	; 63
 1dc:	f8 94       	cli
 1de:	de bf       	out	0x3e, r29	; 62
 1e0:	0f be       	out	0x3f, r0	; 63
 1e2:	cd bf       	out	0x3d, r28	; 61
 1e4:	df 91       	pop	r29
 1e6:	cf 91       	pop	r28
 1e8:	08 95       	ret

000001ea <__vector_13>:
volatile uint8_t strobeDig = 0;//cycle_display_digits
volatile bool button_press = false;//cycle_display_digits


ISR(TIMER1_OVF_vect)
{
 1ea:	1f 92       	push	r1
 1ec:	0f 92       	push	r0
 1ee:	0f b6       	in	r0, 0x3f	; 63
 1f0:	0f 92       	push	r0
 1f2:	11 24       	eor	r1, r1
 1f4:	cf 92       	push	r12
 1f6:	df 92       	push	r13
 1f8:	ef 92       	push	r14
 1fa:	ff 92       	push	r15
 1fc:	2f 93       	push	r18
 1fe:	3f 93       	push	r19
 200:	4f 93       	push	r20
 202:	5f 93       	push	r21
 204:	6f 93       	push	r22
 206:	7f 93       	push	r23
 208:	8f 93       	push	r24
 20a:	9f 93       	push	r25
 20c:	af 93       	push	r26
 20e:	bf 93       	push	r27
 210:	cf 93       	push	r28
 212:	df 93       	push	r29
 214:	ef 93       	push	r30
 216:	ff 93       	push	r31
	uint16_t val_digit = val / (pow(10, strobeDig));  //choose value based on currently displayed digit, cdd counts up and resets to 0 after 3, cdd = 0 = first digit
 218:	c0 91 00 01 	lds	r28, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 21c:	d0 91 01 01 	lds	r29, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 220:	60 91 17 01 	lds	r22, 0x0117	; 0x800117 <strobeDig>
 224:	70 e0       	ldi	r23, 0x00	; 0
 226:	80 e0       	ldi	r24, 0x00	; 0
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	0e 94 95 02 	call	0x52a	; 0x52a <__floatunsisf>
 22e:	9b 01       	movw	r18, r22
 230:	ac 01       	movw	r20, r24
 232:	60 e0       	ldi	r22, 0x00	; 0
 234:	70 e0       	ldi	r23, 0x00	; 0
 236:	80 e2       	ldi	r24, 0x20	; 32
 238:	91 e4       	ldi	r25, 0x41	; 65
 23a:	0e 94 23 03 	call	0x646	; 0x646 <pow>
 23e:	6b 01       	movw	r12, r22
 240:	7c 01       	movw	r14, r24
 242:	be 01       	movw	r22, r28
 244:	80 e0       	ldi	r24, 0x00	; 0
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	0e 94 95 02 	call	0x52a	; 0x52a <__floatunsisf>
 24c:	a7 01       	movw	r20, r14
 24e:	96 01       	movw	r18, r12
 250:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__divsf3>
 254:	0e 94 66 02 	call	0x4cc	; 0x4cc <__fixunssfsi>
 258:	46 2f       	mov	r20, r22
	val_digit = val_digit % 10;
 25a:	26 2f       	mov	r18, r22
 25c:	37 2f       	mov	r19, r23
 25e:	ad ec       	ldi	r26, 0xCD	; 205
 260:	bc ec       	ldi	r27, 0xCC	; 204
 262:	0e 94 82 05 	call	0xb04	; 0xb04 <__umulhisi3>
 266:	96 95       	lsr	r25
 268:	87 95       	ror	r24
 26a:	96 95       	lsr	r25
 26c:	87 95       	ror	r24
 26e:	96 95       	lsr	r25
 270:	87 95       	ror	r24
 272:	9c 01       	movw	r18, r24
 274:	22 0f       	add	r18, r18
 276:	33 1f       	adc	r19, r19
 278:	88 0f       	add	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	88 0f       	add	r24, r24
 27e:	99 1f       	adc	r25, r25
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	82 0f       	add	r24, r18
 286:	93 1f       	adc	r25, r19
	
	
	ShowDigit(val_digit, strobeDig);
 288:	60 91 17 01 	lds	r22, 0x0117	; 0x800117 <strobeDig>
 28c:	48 1b       	sub	r20, r24
 28e:	84 2f       	mov	r24, r20
 290:	0e 94 ba 00 	call	0x174	; 0x174 <ShowDigit>
	
	
	strobeDig = (strobeDig + 1) % 4;
 294:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <strobeDig>
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	01 96       	adiw	r24, 0x01	; 1
 29c:	83 70       	andi	r24, 0x03	; 3
 29e:	90 78       	andi	r25, 0x80	; 128
 2a0:	99 23       	and	r25, r25
 2a2:	24 f4       	brge	.+8      	; 0x2ac <__vector_13+0xc2>
 2a4:	01 97       	sbiw	r24, 0x01	; 1
 2a6:	8c 6f       	ori	r24, 0xFC	; 252
 2a8:	9f 6f       	ori	r25, 0xFF	; 255
 2aa:	01 96       	adiw	r24, 0x01	; 1
 2ac:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <strobeDig>
	TIFR1 = 0x1 << TOV1;
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	86 bb       	out	0x16, r24	; 22
};
 2b4:	ff 91       	pop	r31
 2b6:	ef 91       	pop	r30
 2b8:	df 91       	pop	r29
 2ba:	cf 91       	pop	r28
 2bc:	bf 91       	pop	r27
 2be:	af 91       	pop	r26
 2c0:	9f 91       	pop	r25
 2c2:	8f 91       	pop	r24
 2c4:	7f 91       	pop	r23
 2c6:	6f 91       	pop	r22
 2c8:	5f 91       	pop	r21
 2ca:	4f 91       	pop	r20
 2cc:	3f 91       	pop	r19
 2ce:	2f 91       	pop	r18
 2d0:	ff 90       	pop	r15
 2d2:	ef 90       	pop	r14
 2d4:	df 90       	pop	r13
 2d6:	cf 90       	pop	r12
 2d8:	0f 90       	pop	r0
 2da:	0f be       	out	0x3f, r0	; 63
 2dc:	0f 90       	pop	r0
 2de:	1f 90       	pop	r1
 2e0:	18 95       	reti

000002e2 <CheckButtons>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2e2:	85 e0       	ldi	r24, 0x05	; 5
 2e4:	8a 95       	dec	r24
 2e6:	f1 f7       	brne	.-4      	; 0x2e4 <CheckButtons+0x2>
 2e8:	00 00       	nop
};

uint8_t CheckButtons()   //returns the button pressed, 0 = no new buttons, 1 = right was pressed, 2 = middle, 3 = left. Fxn ignores overlapping or continued inputs, must have no input at all to reset and take new inputs
{
	_delay_us(1);
	if(PINE == 0b00000111)
 2ea:	8c b1       	in	r24, 0x0c	; 12
 2ec:	87 30       	cpi	r24, 0x07	; 7
 2ee:	51 f0       	breq	.+20     	; 0x304 <CheckButtons+0x22>
	return 0;
	else if(PINE == 0b00000110)
 2f0:	8c b1       	in	r24, 0x0c	; 12
 2f2:	86 30       	cpi	r24, 0x06	; 6
 2f4:	49 f0       	breq	.+18     	; 0x308 <CheckButtons+0x26>
	return 1;
	else if(PINE == 0b00000101)
 2f6:	8c b1       	in	r24, 0x0c	; 12
 2f8:	85 30       	cpi	r24, 0x05	; 5
 2fa:	41 f0       	breq	.+16     	; 0x30c <CheckButtons+0x2a>
	return 2;
	else if(PINE == 0b00000011)
 2fc:	8c b1       	in	r24, 0x0c	; 12
 2fe:	83 30       	cpi	r24, 0x03	; 3
 300:	31 f0       	breq	.+12     	; 0x30e <CheckButtons+0x2c>
	return 3;
	
}
 302:	08 95       	ret

uint8_t CheckButtons()   //returns the button pressed, 0 = no new buttons, 1 = right was pressed, 2 = middle, 3 = left. Fxn ignores overlapping or continued inputs, must have no input at all to reset and take new inputs
{
	_delay_us(1);
	if(PINE == 0b00000111)
	return 0;
 304:	80 e0       	ldi	r24, 0x00	; 0
 306:	08 95       	ret
	else if(PINE == 0b00000110)
	return 1;
 308:	81 e0       	ldi	r24, 0x01	; 1
 30a:	08 95       	ret
	else if(PINE == 0b00000101)
	return 2;
 30c:	82 e0       	ldi	r24, 0x02	; 2
	else if(PINE == 0b00000011)
	return 3;
	
}
 30e:	08 95       	ret

00000310 <main>:
};


int main(void)
{
	DDRD = 0xFF;
 310:	8f ef       	ldi	r24, 0xFF	; 255
 312:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0xFF;
 314:	84 b9       	out	0x04, r24	; 4
	DDRE = 0x00;
 316:	1d b8       	out	0x0d, r1	; 13
	
	TCCR1A = 0x00;
 318:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B = 0x01;
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TIMSK1 = (1<<TOIE1);
 322:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
	sei();
 326:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 328:	8f e3       	ldi	r24, 0x3F	; 63
 32a:	9c e9       	ldi	r25, 0x9C	; 156
 32c:	01 97       	sbiw	r24, 0x01	; 1
 32e:	f1 f7       	brne	.-4      	; 0x32c <main+0x1c>
 330:	00 c0       	rjmp	.+0      	; 0x332 <main+0x22>
 332:	00 00       	nop
	
	while(1)
	{
		_delay_ms(10);
		cli();
 334:	f8 94       	cli
		if (CheckButtons() == 0)
 336:	0e 94 71 01 	call	0x2e2	; 0x2e2 <CheckButtons>
 33a:	81 11       	cpse	r24, r1
 33c:	02 c0       	rjmp	.+4      	; 0x342 <main+0x32>
		button_press = false;
 33e:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <__data_end>
		if (!button_press && (CheckButtons() == 1))
 342:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 346:	81 11       	cpse	r24, r1
 348:	10 c0       	rjmp	.+32     	; 0x36a <main+0x5a>
 34a:	0e 94 71 01 	call	0x2e2	; 0x2e2 <CheckButtons>
 34e:	81 30       	cpi	r24, 0x01	; 1
 350:	61 f4       	brne	.+24     	; 0x36a <main+0x5a>
		{
			button_press = true;
 352:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
			val++;
 356:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 35a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 35e:	01 96       	adiw	r24, 0x01	; 1
 360:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 364:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 368:	24 c0       	rjmp	.+72     	; 0x3b2 <main+0xa2>
		}
		else if (!button_press && (CheckButtons() == 2))
 36a:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 36e:	81 11       	cpse	r24, r1
 370:	0c c0       	rjmp	.+24     	; 0x38a <main+0x7a>
 372:	0e 94 71 01 	call	0x2e2	; 0x2e2 <CheckButtons>
 376:	82 30       	cpi	r24, 0x02	; 2
 378:	41 f4       	brne	.+16     	; 0x38a <main+0x7a>
		{
			button_press = true;
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
			val = 0;
 380:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 384:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 388:	14 c0       	rjmp	.+40     	; 0x3b2 <main+0xa2>
		}
		else if (!button_press && (CheckButtons() == 3))
 38a:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 38e:	81 11       	cpse	r24, r1
 390:	10 c0       	rjmp	.+32     	; 0x3b2 <main+0xa2>
 392:	0e 94 71 01 	call	0x2e2	; 0x2e2 <CheckButtons>
 396:	83 30       	cpi	r24, 0x03	; 3
 398:	61 f4       	brne	.+24     	; 0x3b2 <main+0xa2>
		{
			button_press = true;
 39a:	81 e0       	ldi	r24, 0x01	; 1
 39c:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
			val--;
 3a0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 3a4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3a8:	01 97       	sbiw	r24, 0x01	; 1
 3aa:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3ae:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		}
		
		if (val == 10000)
 3b2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 3b6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3ba:	80 31       	cpi	r24, 0x10	; 16
 3bc:	97 42       	sbci	r25, 0x27	; 39
 3be:	29 f4       	brne	.+10     	; 0x3ca <main+0xba>
		val = 0;
 3c0:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3c4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 3c8:	0d c0       	rjmp	.+26     	; 0x3e4 <main+0xd4>
		else if (val > 10000)
 3ca:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 3ce:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3d2:	81 31       	cpi	r24, 0x11	; 17
 3d4:	97 42       	sbci	r25, 0x27	; 39
 3d6:	30 f0       	brcs	.+12     	; 0x3e4 <main+0xd4>
		val = 9999;
 3d8:	8f e0       	ldi	r24, 0x0F	; 15
 3da:	97 e2       	ldi	r25, 0x27	; 39
 3dc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3e0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		sei();
 3e4:	78 94       	sei
	}
 3e6:	a0 cf       	rjmp	.-192    	; 0x328 <main+0x18>

000003e8 <__divsf3>:
 3e8:	0e 94 08 02 	call	0x410	; 0x410 <__divsf3x>
 3ec:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__fp_round>
 3f0:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__fp_pscB>
 3f4:	58 f0       	brcs	.+22     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 3f6:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__fp_pscA>
 3fa:	40 f0       	brcs	.+16     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 3fc:	29 f4       	brne	.+10     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3fe:	5f 3f       	cpi	r21, 0xFF	; 255
 400:	29 f0       	breq	.+10     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 402:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <__fp_inf>
 406:	51 11       	cpse	r21, r1
 408:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__fp_szero>
 40c:	0c 94 d8 02 	jmp	0x5b0	; 0x5b0 <__fp_nan>

00000410 <__divsf3x>:
 410:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <__fp_split3>
 414:	68 f3       	brcs	.-38     	; 0x3f0 <__divsf3+0x8>

00000416 <__divsf3_pse>:
 416:	99 23       	and	r25, r25
 418:	b1 f3       	breq	.-20     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 41a:	55 23       	and	r21, r21
 41c:	91 f3       	breq	.-28     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 41e:	95 1b       	sub	r25, r21
 420:	55 0b       	sbc	r21, r21
 422:	bb 27       	eor	r27, r27
 424:	aa 27       	eor	r26, r26
 426:	62 17       	cp	r22, r18
 428:	73 07       	cpc	r23, r19
 42a:	84 07       	cpc	r24, r20
 42c:	38 f0       	brcs	.+14     	; 0x43c <__divsf3_pse+0x26>
 42e:	9f 5f       	subi	r25, 0xFF	; 255
 430:	5f 4f       	sbci	r21, 0xFF	; 255
 432:	22 0f       	add	r18, r18
 434:	33 1f       	adc	r19, r19
 436:	44 1f       	adc	r20, r20
 438:	aa 1f       	adc	r26, r26
 43a:	a9 f3       	breq	.-22     	; 0x426 <__divsf3_pse+0x10>
 43c:	35 d0       	rcall	.+106    	; 0x4a8 <__divsf3_pse+0x92>
 43e:	0e 2e       	mov	r0, r30
 440:	3a f0       	brmi	.+14     	; 0x450 <__divsf3_pse+0x3a>
 442:	e0 e8       	ldi	r30, 0x80	; 128
 444:	32 d0       	rcall	.+100    	; 0x4aa <__divsf3_pse+0x94>
 446:	91 50       	subi	r25, 0x01	; 1
 448:	50 40       	sbci	r21, 0x00	; 0
 44a:	e6 95       	lsr	r30
 44c:	00 1c       	adc	r0, r0
 44e:	ca f7       	brpl	.-14     	; 0x442 <__divsf3_pse+0x2c>
 450:	2b d0       	rcall	.+86     	; 0x4a8 <__divsf3_pse+0x92>
 452:	fe 2f       	mov	r31, r30
 454:	29 d0       	rcall	.+82     	; 0x4a8 <__divsf3_pse+0x92>
 456:	66 0f       	add	r22, r22
 458:	77 1f       	adc	r23, r23
 45a:	88 1f       	adc	r24, r24
 45c:	bb 1f       	adc	r27, r27
 45e:	26 17       	cp	r18, r22
 460:	37 07       	cpc	r19, r23
 462:	48 07       	cpc	r20, r24
 464:	ab 07       	cpc	r26, r27
 466:	b0 e8       	ldi	r27, 0x80	; 128
 468:	09 f0       	breq	.+2      	; 0x46c <__divsf3_pse+0x56>
 46a:	bb 0b       	sbc	r27, r27
 46c:	80 2d       	mov	r24, r0
 46e:	bf 01       	movw	r22, r30
 470:	ff 27       	eor	r31, r31
 472:	93 58       	subi	r25, 0x83	; 131
 474:	5f 4f       	sbci	r21, 0xFF	; 255
 476:	3a f0       	brmi	.+14     	; 0x486 <__divsf3_pse+0x70>
 478:	9e 3f       	cpi	r25, 0xFE	; 254
 47a:	51 05       	cpc	r21, r1
 47c:	78 f0       	brcs	.+30     	; 0x49c <__divsf3_pse+0x86>
 47e:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <__fp_inf>
 482:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__fp_szero>
 486:	5f 3f       	cpi	r21, 0xFF	; 255
 488:	e4 f3       	brlt	.-8      	; 0x482 <__divsf3_pse+0x6c>
 48a:	98 3e       	cpi	r25, 0xE8	; 232
 48c:	d4 f3       	brlt	.-12     	; 0x482 <__divsf3_pse+0x6c>
 48e:	86 95       	lsr	r24
 490:	77 95       	ror	r23
 492:	67 95       	ror	r22
 494:	b7 95       	ror	r27
 496:	f7 95       	ror	r31
 498:	9f 5f       	subi	r25, 0xFF	; 255
 49a:	c9 f7       	brne	.-14     	; 0x48e <__divsf3_pse+0x78>
 49c:	88 0f       	add	r24, r24
 49e:	91 1d       	adc	r25, r1
 4a0:	96 95       	lsr	r25
 4a2:	87 95       	ror	r24
 4a4:	97 f9       	bld	r25, 7
 4a6:	08 95       	ret
 4a8:	e1 e0       	ldi	r30, 0x01	; 1
 4aa:	66 0f       	add	r22, r22
 4ac:	77 1f       	adc	r23, r23
 4ae:	88 1f       	adc	r24, r24
 4b0:	bb 1f       	adc	r27, r27
 4b2:	62 17       	cp	r22, r18
 4b4:	73 07       	cpc	r23, r19
 4b6:	84 07       	cpc	r24, r20
 4b8:	ba 07       	cpc	r27, r26
 4ba:	20 f0       	brcs	.+8      	; 0x4c4 <__divsf3_pse+0xae>
 4bc:	62 1b       	sub	r22, r18
 4be:	73 0b       	sbc	r23, r19
 4c0:	84 0b       	sbc	r24, r20
 4c2:	ba 0b       	sbc	r27, r26
 4c4:	ee 1f       	adc	r30, r30
 4c6:	88 f7       	brcc	.-30     	; 0x4aa <__divsf3_pse+0x94>
 4c8:	e0 95       	com	r30
 4ca:	08 95       	ret

000004cc <__fixunssfsi>:
 4cc:	0e 94 02 03 	call	0x604	; 0x604 <__fp_splitA>
 4d0:	88 f0       	brcs	.+34     	; 0x4f4 <__fixunssfsi+0x28>
 4d2:	9f 57       	subi	r25, 0x7F	; 127
 4d4:	98 f0       	brcs	.+38     	; 0x4fc <__fixunssfsi+0x30>
 4d6:	b9 2f       	mov	r27, r25
 4d8:	99 27       	eor	r25, r25
 4da:	b7 51       	subi	r27, 0x17	; 23
 4dc:	b0 f0       	brcs	.+44     	; 0x50a <__fixunssfsi+0x3e>
 4de:	e1 f0       	breq	.+56     	; 0x518 <__fixunssfsi+0x4c>
 4e0:	66 0f       	add	r22, r22
 4e2:	77 1f       	adc	r23, r23
 4e4:	88 1f       	adc	r24, r24
 4e6:	99 1f       	adc	r25, r25
 4e8:	1a f0       	brmi	.+6      	; 0x4f0 <__fixunssfsi+0x24>
 4ea:	ba 95       	dec	r27
 4ec:	c9 f7       	brne	.-14     	; 0x4e0 <__fixunssfsi+0x14>
 4ee:	14 c0       	rjmp	.+40     	; 0x518 <__fixunssfsi+0x4c>
 4f0:	b1 30       	cpi	r27, 0x01	; 1
 4f2:	91 f0       	breq	.+36     	; 0x518 <__fixunssfsi+0x4c>
 4f4:	0e 94 1c 03 	call	0x638	; 0x638 <__fp_zero>
 4f8:	b1 e0       	ldi	r27, 0x01	; 1
 4fa:	08 95       	ret
 4fc:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_zero>
 500:	67 2f       	mov	r22, r23
 502:	78 2f       	mov	r23, r24
 504:	88 27       	eor	r24, r24
 506:	b8 5f       	subi	r27, 0xF8	; 248
 508:	39 f0       	breq	.+14     	; 0x518 <__fixunssfsi+0x4c>
 50a:	b9 3f       	cpi	r27, 0xF9	; 249
 50c:	cc f3       	brlt	.-14     	; 0x500 <__fixunssfsi+0x34>
 50e:	86 95       	lsr	r24
 510:	77 95       	ror	r23
 512:	67 95       	ror	r22
 514:	b3 95       	inc	r27
 516:	d9 f7       	brne	.-10     	; 0x50e <__fixunssfsi+0x42>
 518:	3e f4       	brtc	.+14     	; 0x528 <__fixunssfsi+0x5c>
 51a:	90 95       	com	r25
 51c:	80 95       	com	r24
 51e:	70 95       	com	r23
 520:	61 95       	neg	r22
 522:	7f 4f       	sbci	r23, 0xFF	; 255
 524:	8f 4f       	sbci	r24, 0xFF	; 255
 526:	9f 4f       	sbci	r25, 0xFF	; 255
 528:	08 95       	ret

0000052a <__floatunsisf>:
 52a:	e8 94       	clt
 52c:	09 c0       	rjmp	.+18     	; 0x540 <__floatsisf+0x12>

0000052e <__floatsisf>:
 52e:	97 fb       	bst	r25, 7
 530:	3e f4       	brtc	.+14     	; 0x540 <__floatsisf+0x12>
 532:	90 95       	com	r25
 534:	80 95       	com	r24
 536:	70 95       	com	r23
 538:	61 95       	neg	r22
 53a:	7f 4f       	sbci	r23, 0xFF	; 255
 53c:	8f 4f       	sbci	r24, 0xFF	; 255
 53e:	9f 4f       	sbci	r25, 0xFF	; 255
 540:	99 23       	and	r25, r25
 542:	a9 f0       	breq	.+42     	; 0x56e <__floatsisf+0x40>
 544:	f9 2f       	mov	r31, r25
 546:	96 e9       	ldi	r25, 0x96	; 150
 548:	bb 27       	eor	r27, r27
 54a:	93 95       	inc	r25
 54c:	f6 95       	lsr	r31
 54e:	87 95       	ror	r24
 550:	77 95       	ror	r23
 552:	67 95       	ror	r22
 554:	b7 95       	ror	r27
 556:	f1 11       	cpse	r31, r1
 558:	f8 cf       	rjmp	.-16     	; 0x54a <__floatsisf+0x1c>
 55a:	fa f4       	brpl	.+62     	; 0x59a <__floatsisf+0x6c>
 55c:	bb 0f       	add	r27, r27
 55e:	11 f4       	brne	.+4      	; 0x564 <__floatsisf+0x36>
 560:	60 ff       	sbrs	r22, 0
 562:	1b c0       	rjmp	.+54     	; 0x59a <__floatsisf+0x6c>
 564:	6f 5f       	subi	r22, 0xFF	; 255
 566:	7f 4f       	sbci	r23, 0xFF	; 255
 568:	8f 4f       	sbci	r24, 0xFF	; 255
 56a:	9f 4f       	sbci	r25, 0xFF	; 255
 56c:	16 c0       	rjmp	.+44     	; 0x59a <__floatsisf+0x6c>
 56e:	88 23       	and	r24, r24
 570:	11 f0       	breq	.+4      	; 0x576 <__floatsisf+0x48>
 572:	96 e9       	ldi	r25, 0x96	; 150
 574:	11 c0       	rjmp	.+34     	; 0x598 <__floatsisf+0x6a>
 576:	77 23       	and	r23, r23
 578:	21 f0       	breq	.+8      	; 0x582 <__floatsisf+0x54>
 57a:	9e e8       	ldi	r25, 0x8E	; 142
 57c:	87 2f       	mov	r24, r23
 57e:	76 2f       	mov	r23, r22
 580:	05 c0       	rjmp	.+10     	; 0x58c <__floatsisf+0x5e>
 582:	66 23       	and	r22, r22
 584:	71 f0       	breq	.+28     	; 0x5a2 <__floatsisf+0x74>
 586:	96 e8       	ldi	r25, 0x86	; 134
 588:	86 2f       	mov	r24, r22
 58a:	70 e0       	ldi	r23, 0x00	; 0
 58c:	60 e0       	ldi	r22, 0x00	; 0
 58e:	2a f0       	brmi	.+10     	; 0x59a <__floatsisf+0x6c>
 590:	9a 95       	dec	r25
 592:	66 0f       	add	r22, r22
 594:	77 1f       	adc	r23, r23
 596:	88 1f       	adc	r24, r24
 598:	da f7       	brpl	.-10     	; 0x590 <__floatsisf+0x62>
 59a:	88 0f       	add	r24, r24
 59c:	96 95       	lsr	r25
 59e:	87 95       	ror	r24
 5a0:	97 f9       	bld	r25, 7
 5a2:	08 95       	ret

000005a4 <__fp_inf>:
 5a4:	97 f9       	bld	r25, 7
 5a6:	9f 67       	ori	r25, 0x7F	; 127
 5a8:	80 e8       	ldi	r24, 0x80	; 128
 5aa:	70 e0       	ldi	r23, 0x00	; 0
 5ac:	60 e0       	ldi	r22, 0x00	; 0
 5ae:	08 95       	ret

000005b0 <__fp_nan>:
 5b0:	9f ef       	ldi	r25, 0xFF	; 255
 5b2:	80 ec       	ldi	r24, 0xC0	; 192
 5b4:	08 95       	ret

000005b6 <__fp_pscA>:
 5b6:	00 24       	eor	r0, r0
 5b8:	0a 94       	dec	r0
 5ba:	16 16       	cp	r1, r22
 5bc:	17 06       	cpc	r1, r23
 5be:	18 06       	cpc	r1, r24
 5c0:	09 06       	cpc	r0, r25
 5c2:	08 95       	ret

000005c4 <__fp_pscB>:
 5c4:	00 24       	eor	r0, r0
 5c6:	0a 94       	dec	r0
 5c8:	12 16       	cp	r1, r18
 5ca:	13 06       	cpc	r1, r19
 5cc:	14 06       	cpc	r1, r20
 5ce:	05 06       	cpc	r0, r21
 5d0:	08 95       	ret

000005d2 <__fp_round>:
 5d2:	09 2e       	mov	r0, r25
 5d4:	03 94       	inc	r0
 5d6:	00 0c       	add	r0, r0
 5d8:	11 f4       	brne	.+4      	; 0x5de <__fp_round+0xc>
 5da:	88 23       	and	r24, r24
 5dc:	52 f0       	brmi	.+20     	; 0x5f2 <__fp_round+0x20>
 5de:	bb 0f       	add	r27, r27
 5e0:	40 f4       	brcc	.+16     	; 0x5f2 <__fp_round+0x20>
 5e2:	bf 2b       	or	r27, r31
 5e4:	11 f4       	brne	.+4      	; 0x5ea <__fp_round+0x18>
 5e6:	60 ff       	sbrs	r22, 0
 5e8:	04 c0       	rjmp	.+8      	; 0x5f2 <__fp_round+0x20>
 5ea:	6f 5f       	subi	r22, 0xFF	; 255
 5ec:	7f 4f       	sbci	r23, 0xFF	; 255
 5ee:	8f 4f       	sbci	r24, 0xFF	; 255
 5f0:	9f 4f       	sbci	r25, 0xFF	; 255
 5f2:	08 95       	ret

000005f4 <__fp_split3>:
 5f4:	57 fd       	sbrc	r21, 7
 5f6:	90 58       	subi	r25, 0x80	; 128
 5f8:	44 0f       	add	r20, r20
 5fa:	55 1f       	adc	r21, r21
 5fc:	59 f0       	breq	.+22     	; 0x614 <__fp_splitA+0x10>
 5fe:	5f 3f       	cpi	r21, 0xFF	; 255
 600:	71 f0       	breq	.+28     	; 0x61e <__fp_splitA+0x1a>
 602:	47 95       	ror	r20

00000604 <__fp_splitA>:
 604:	88 0f       	add	r24, r24
 606:	97 fb       	bst	r25, 7
 608:	99 1f       	adc	r25, r25
 60a:	61 f0       	breq	.+24     	; 0x624 <__fp_splitA+0x20>
 60c:	9f 3f       	cpi	r25, 0xFF	; 255
 60e:	79 f0       	breq	.+30     	; 0x62e <__fp_splitA+0x2a>
 610:	87 95       	ror	r24
 612:	08 95       	ret
 614:	12 16       	cp	r1, r18
 616:	13 06       	cpc	r1, r19
 618:	14 06       	cpc	r1, r20
 61a:	55 1f       	adc	r21, r21
 61c:	f2 cf       	rjmp	.-28     	; 0x602 <__fp_split3+0xe>
 61e:	46 95       	lsr	r20
 620:	f1 df       	rcall	.-30     	; 0x604 <__fp_splitA>
 622:	08 c0       	rjmp	.+16     	; 0x634 <__fp_splitA+0x30>
 624:	16 16       	cp	r1, r22
 626:	17 06       	cpc	r1, r23
 628:	18 06       	cpc	r1, r24
 62a:	99 1f       	adc	r25, r25
 62c:	f1 cf       	rjmp	.-30     	; 0x610 <__fp_splitA+0xc>
 62e:	86 95       	lsr	r24
 630:	71 05       	cpc	r23, r1
 632:	61 05       	cpc	r22, r1
 634:	08 94       	sec
 636:	08 95       	ret

00000638 <__fp_zero>:
 638:	e8 94       	clt

0000063a <__fp_szero>:
 63a:	bb 27       	eor	r27, r27
 63c:	66 27       	eor	r22, r22
 63e:	77 27       	eor	r23, r23
 640:	cb 01       	movw	r24, r22
 642:	97 f9       	bld	r25, 7
 644:	08 95       	ret

00000646 <pow>:
 646:	fa 01       	movw	r30, r20
 648:	ee 0f       	add	r30, r30
 64a:	ff 1f       	adc	r31, r31
 64c:	30 96       	adiw	r30, 0x00	; 0
 64e:	21 05       	cpc	r18, r1
 650:	31 05       	cpc	r19, r1
 652:	a1 f1       	breq	.+104    	; 0x6bc <pow+0x76>
 654:	61 15       	cp	r22, r1
 656:	71 05       	cpc	r23, r1
 658:	61 f4       	brne	.+24     	; 0x672 <pow+0x2c>
 65a:	80 38       	cpi	r24, 0x80	; 128
 65c:	bf e3       	ldi	r27, 0x3F	; 63
 65e:	9b 07       	cpc	r25, r27
 660:	49 f1       	breq	.+82     	; 0x6b4 <pow+0x6e>
 662:	68 94       	set
 664:	90 38       	cpi	r25, 0x80	; 128
 666:	81 05       	cpc	r24, r1
 668:	61 f0       	breq	.+24     	; 0x682 <pow+0x3c>
 66a:	80 38       	cpi	r24, 0x80	; 128
 66c:	bf ef       	ldi	r27, 0xFF	; 255
 66e:	9b 07       	cpc	r25, r27
 670:	41 f0       	breq	.+16     	; 0x682 <pow+0x3c>
 672:	99 23       	and	r25, r25
 674:	4a f5       	brpl	.+82     	; 0x6c8 <pow+0x82>
 676:	ff 3f       	cpi	r31, 0xFF	; 255
 678:	e1 05       	cpc	r30, r1
 67a:	31 05       	cpc	r19, r1
 67c:	21 05       	cpc	r18, r1
 67e:	19 f1       	breq	.+70     	; 0x6c6 <pow+0x80>
 680:	e8 94       	clt
 682:	08 94       	sec
 684:	e7 95       	ror	r30
 686:	d9 01       	movw	r26, r18
 688:	aa 23       	and	r26, r26
 68a:	29 f4       	brne	.+10     	; 0x696 <pow+0x50>
 68c:	ab 2f       	mov	r26, r27
 68e:	be 2f       	mov	r27, r30
 690:	f8 5f       	subi	r31, 0xF8	; 248
 692:	d0 f3       	brcs	.-12     	; 0x688 <pow+0x42>
 694:	10 c0       	rjmp	.+32     	; 0x6b6 <pow+0x70>
 696:	ff 5f       	subi	r31, 0xFF	; 255
 698:	70 f4       	brcc	.+28     	; 0x6b6 <pow+0x70>
 69a:	a6 95       	lsr	r26
 69c:	e0 f7       	brcc	.-8      	; 0x696 <pow+0x50>
 69e:	f7 39       	cpi	r31, 0x97	; 151
 6a0:	50 f0       	brcs	.+20     	; 0x6b6 <pow+0x70>
 6a2:	19 f0       	breq	.+6      	; 0x6aa <pow+0x64>
 6a4:	ff 3a       	cpi	r31, 0xAF	; 175
 6a6:	38 f4       	brcc	.+14     	; 0x6b6 <pow+0x70>
 6a8:	9f 77       	andi	r25, 0x7F	; 127
 6aa:	9f 93       	push	r25
 6ac:	0d d0       	rcall	.+26     	; 0x6c8 <pow+0x82>
 6ae:	0f 90       	pop	r0
 6b0:	07 fc       	sbrc	r0, 7
 6b2:	90 58       	subi	r25, 0x80	; 128
 6b4:	08 95       	ret
 6b6:	46 f0       	brts	.+16     	; 0x6c8 <pow+0x82>
 6b8:	0c 94 d8 02 	jmp	0x5b0	; 0x5b0 <__fp_nan>
 6bc:	60 e0       	ldi	r22, 0x00	; 0
 6be:	70 e0       	ldi	r23, 0x00	; 0
 6c0:	80 e8       	ldi	r24, 0x80	; 128
 6c2:	9f e3       	ldi	r25, 0x3F	; 63
 6c4:	08 95       	ret
 6c6:	4f e7       	ldi	r20, 0x7F	; 127
 6c8:	9f 77       	andi	r25, 0x7F	; 127
 6ca:	5f 93       	push	r21
 6cc:	4f 93       	push	r20
 6ce:	3f 93       	push	r19
 6d0:	2f 93       	push	r18
 6d2:	0e 94 1e 04 	call	0x83c	; 0x83c <log>
 6d6:	2f 91       	pop	r18
 6d8:	3f 91       	pop	r19
 6da:	4f 91       	pop	r20
 6dc:	5f 91       	pop	r21
 6de:	0e 94 9a 04 	call	0x934	; 0x934 <__mulsf3>
 6e2:	0c 94 7b 03 	jmp	0x6f6	; 0x6f6 <exp>
 6e6:	29 f4       	brne	.+10     	; 0x6f2 <pow+0xac>
 6e8:	16 f0       	brts	.+4      	; 0x6ee <pow+0xa8>
 6ea:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <__fp_inf>
 6ee:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_zero>
 6f2:	0c 94 d8 02 	jmp	0x5b0	; 0x5b0 <__fp_nan>

000006f6 <exp>:
 6f6:	0e 94 02 03 	call	0x604	; 0x604 <__fp_splitA>
 6fa:	a8 f3       	brcs	.-22     	; 0x6e6 <pow+0xa0>
 6fc:	96 38       	cpi	r25, 0x86	; 134
 6fe:	a0 f7       	brcc	.-24     	; 0x6e8 <pow+0xa2>
 700:	07 f8       	bld	r0, 7
 702:	0f 92       	push	r0
 704:	e8 94       	clt
 706:	2b e3       	ldi	r18, 0x3B	; 59
 708:	3a ea       	ldi	r19, 0xAA	; 170
 70a:	48 eb       	ldi	r20, 0xB8	; 184
 70c:	5f e7       	ldi	r21, 0x7F	; 127
 70e:	0e 94 b0 04 	call	0x960	; 0x960 <__mulsf3_pse>
 712:	0f 92       	push	r0
 714:	0f 92       	push	r0
 716:	0f 92       	push	r0
 718:	4d b7       	in	r20, 0x3d	; 61
 71a:	5e b7       	in	r21, 0x3e	; 62
 71c:	0f 92       	push	r0
 71e:	0e 94 66 04 	call	0x8cc	; 0x8cc <modf>
 722:	e4 eb       	ldi	r30, 0xB4	; 180
 724:	f0 e0       	ldi	r31, 0x00	; 0
 726:	0e 94 ad 03 	call	0x75a	; 0x75a <__fp_powser>
 72a:	4f 91       	pop	r20
 72c:	5f 91       	pop	r21
 72e:	ef 91       	pop	r30
 730:	ff 91       	pop	r31
 732:	e5 95       	asr	r30
 734:	ee 1f       	adc	r30, r30
 736:	ff 1f       	adc	r31, r31
 738:	49 f0       	breq	.+18     	; 0x74c <exp+0x56>
 73a:	fe 57       	subi	r31, 0x7E	; 126
 73c:	e0 68       	ori	r30, 0x80	; 128
 73e:	44 27       	eor	r20, r20
 740:	ee 0f       	add	r30, r30
 742:	44 1f       	adc	r20, r20
 744:	fa 95       	dec	r31
 746:	e1 f7       	brne	.-8      	; 0x740 <exp+0x4a>
 748:	41 95       	neg	r20
 74a:	55 0b       	sbc	r21, r21
 74c:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <ldexp>
 750:	0f 90       	pop	r0
 752:	07 fe       	sbrs	r0, 7
 754:	0c 94 d4 03 	jmp	0x7a8	; 0x7a8 <inverse>
 758:	08 95       	ret

0000075a <__fp_powser>:
 75a:	df 93       	push	r29
 75c:	cf 93       	push	r28
 75e:	1f 93       	push	r17
 760:	0f 93       	push	r16
 762:	ff 92       	push	r15
 764:	ef 92       	push	r14
 766:	df 92       	push	r13
 768:	7b 01       	movw	r14, r22
 76a:	8c 01       	movw	r16, r24
 76c:	68 94       	set
 76e:	06 c0       	rjmp	.+12     	; 0x77c <__fp_powser+0x22>
 770:	da 2e       	mov	r13, r26
 772:	ef 01       	movw	r28, r30
 774:	0e 94 ad 04 	call	0x95a	; 0x95a <__mulsf3x>
 778:	fe 01       	movw	r30, r28
 77a:	e8 94       	clt
 77c:	a5 91       	lpm	r26, Z+
 77e:	25 91       	lpm	r18, Z+
 780:	35 91       	lpm	r19, Z+
 782:	45 91       	lpm	r20, Z+
 784:	55 91       	lpm	r21, Z+
 786:	a6 f3       	brts	.-24     	; 0x770 <__fp_powser+0x16>
 788:	ef 01       	movw	r28, r30
 78a:	0e 94 1f 05 	call	0xa3e	; 0xa3e <__addsf3x>
 78e:	fe 01       	movw	r30, r28
 790:	97 01       	movw	r18, r14
 792:	a8 01       	movw	r20, r16
 794:	da 94       	dec	r13
 796:	69 f7       	brne	.-38     	; 0x772 <__fp_powser+0x18>
 798:	df 90       	pop	r13
 79a:	ef 90       	pop	r14
 79c:	ff 90       	pop	r15
 79e:	0f 91       	pop	r16
 7a0:	1f 91       	pop	r17
 7a2:	cf 91       	pop	r28
 7a4:	df 91       	pop	r29
 7a6:	08 95       	ret

000007a8 <inverse>:
 7a8:	9b 01       	movw	r18, r22
 7aa:	ac 01       	movw	r20, r24
 7ac:	60 e0       	ldi	r22, 0x00	; 0
 7ae:	70 e0       	ldi	r23, 0x00	; 0
 7b0:	80 e8       	ldi	r24, 0x80	; 128
 7b2:	9f e3       	ldi	r25, 0x3F	; 63
 7b4:	0c 94 f4 01 	jmp	0x3e8	; 0x3e8 <__divsf3>
 7b8:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <__fp_inf>
 7bc:	0c 94 74 05 	jmp	0xae8	; 0xae8 <__fp_mpack>

000007c0 <ldexp>:
 7c0:	0e 94 02 03 	call	0x604	; 0x604 <__fp_splitA>
 7c4:	d8 f3       	brcs	.-10     	; 0x7bc <inverse+0x14>
 7c6:	99 23       	and	r25, r25
 7c8:	c9 f3       	breq	.-14     	; 0x7bc <inverse+0x14>
 7ca:	94 0f       	add	r25, r20
 7cc:	51 1d       	adc	r21, r1
 7ce:	a3 f3       	brvs	.-24     	; 0x7b8 <inverse+0x10>
 7d0:	91 50       	subi	r25, 0x01	; 1
 7d2:	50 40       	sbci	r21, 0x00	; 0
 7d4:	94 f0       	brlt	.+36     	; 0x7fa <ldexp+0x3a>
 7d6:	59 f0       	breq	.+22     	; 0x7ee <ldexp+0x2e>
 7d8:	88 23       	and	r24, r24
 7da:	32 f0       	brmi	.+12     	; 0x7e8 <ldexp+0x28>
 7dc:	66 0f       	add	r22, r22
 7de:	77 1f       	adc	r23, r23
 7e0:	88 1f       	adc	r24, r24
 7e2:	91 50       	subi	r25, 0x01	; 1
 7e4:	50 40       	sbci	r21, 0x00	; 0
 7e6:	c1 f7       	brne	.-16     	; 0x7d8 <ldexp+0x18>
 7e8:	9e 3f       	cpi	r25, 0xFE	; 254
 7ea:	51 05       	cpc	r21, r1
 7ec:	2c f7       	brge	.-54     	; 0x7b8 <inverse+0x10>
 7ee:	88 0f       	add	r24, r24
 7f0:	91 1d       	adc	r25, r1
 7f2:	96 95       	lsr	r25
 7f4:	87 95       	ror	r24
 7f6:	97 f9       	bld	r25, 7
 7f8:	08 95       	ret
 7fa:	5f 3f       	cpi	r21, 0xFF	; 255
 7fc:	ac f0       	brlt	.+42     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 7fe:	98 3e       	cpi	r25, 0xE8	; 232
 800:	9c f0       	brlt	.+38     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 802:	bb 27       	eor	r27, r27
 804:	86 95       	lsr	r24
 806:	77 95       	ror	r23
 808:	67 95       	ror	r22
 80a:	b7 95       	ror	r27
 80c:	08 f4       	brcc	.+2      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 80e:	b1 60       	ori	r27, 0x01	; 1
 810:	93 95       	inc	r25
 812:	c1 f7       	brne	.-16     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 814:	bb 0f       	add	r27, r27
 816:	58 f7       	brcc	.-42     	; 0x7ee <ldexp+0x2e>
 818:	11 f4       	brne	.+4      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 81a:	60 ff       	sbrs	r22, 0
 81c:	e8 cf       	rjmp	.-48     	; 0x7ee <ldexp+0x2e>
 81e:	6f 5f       	subi	r22, 0xFF	; 255
 820:	7f 4f       	sbci	r23, 0xFF	; 255
 822:	8f 4f       	sbci	r24, 0xFF	; 255
 824:	9f 4f       	sbci	r25, 0xFF	; 255
 826:	e3 cf       	rjmp	.-58     	; 0x7ee <ldexp+0x2e>
 828:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__fp_szero>
 82c:	16 f0       	brts	.+4      	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 82e:	0c 94 74 05 	jmp	0xae8	; 0xae8 <__fp_mpack>
 832:	0c 94 d8 02 	jmp	0x5b0	; 0x5b0 <__fp_nan>
 836:	68 94       	set
 838:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <__fp_inf>

0000083c <log>:
 83c:	0e 94 02 03 	call	0x604	; 0x604 <__fp_splitA>
 840:	a8 f3       	brcs	.-22     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
 842:	99 23       	and	r25, r25
 844:	c1 f3       	breq	.-16     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 846:	ae f3       	brts	.-22     	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 848:	df 93       	push	r29
 84a:	cf 93       	push	r28
 84c:	1f 93       	push	r17
 84e:	0f 93       	push	r16
 850:	ff 92       	push	r15
 852:	c9 2f       	mov	r28, r25
 854:	dd 27       	eor	r29, r29
 856:	88 23       	and	r24, r24
 858:	2a f0       	brmi	.+10     	; 0x864 <log+0x28>
 85a:	21 97       	sbiw	r28, 0x01	; 1
 85c:	66 0f       	add	r22, r22
 85e:	77 1f       	adc	r23, r23
 860:	88 1f       	adc	r24, r24
 862:	da f7       	brpl	.-10     	; 0x85a <log+0x1e>
 864:	20 e0       	ldi	r18, 0x00	; 0
 866:	30 e0       	ldi	r19, 0x00	; 0
 868:	40 e8       	ldi	r20, 0x80	; 128
 86a:	5f eb       	ldi	r21, 0xBF	; 191
 86c:	9f e3       	ldi	r25, 0x3F	; 63
 86e:	88 39       	cpi	r24, 0x98	; 152
 870:	20 f0       	brcs	.+8      	; 0x87a <log+0x3e>
 872:	80 3e       	cpi	r24, 0xE0	; 224
 874:	38 f0       	brcs	.+14     	; 0x884 <log+0x48>
 876:	21 96       	adiw	r28, 0x01	; 1
 878:	8f 77       	andi	r24, 0x7F	; 127
 87a:	0e 94 08 05 	call	0xa10	; 0xa10 <__addsf3>
 87e:	ec ed       	ldi	r30, 0xDC	; 220
 880:	f0 e0       	ldi	r31, 0x00	; 0
 882:	04 c0       	rjmp	.+8      	; 0x88c <log+0x50>
 884:	0e 94 08 05 	call	0xa10	; 0xa10 <__addsf3>
 888:	e9 e0       	ldi	r30, 0x09	; 9
 88a:	f1 e0       	ldi	r31, 0x01	; 1
 88c:	0e 94 ad 03 	call	0x75a	; 0x75a <__fp_powser>
 890:	8b 01       	movw	r16, r22
 892:	be 01       	movw	r22, r28
 894:	ec 01       	movw	r28, r24
 896:	fb 2e       	mov	r15, r27
 898:	6f 57       	subi	r22, 0x7F	; 127
 89a:	71 09       	sbc	r23, r1
 89c:	75 95       	asr	r23
 89e:	77 1f       	adc	r23, r23
 8a0:	88 0b       	sbc	r24, r24
 8a2:	99 0b       	sbc	r25, r25
 8a4:	0e 94 97 02 	call	0x52e	; 0x52e <__floatsisf>
 8a8:	28 e1       	ldi	r18, 0x18	; 24
 8aa:	32 e7       	ldi	r19, 0x72	; 114
 8ac:	41 e3       	ldi	r20, 0x31	; 49
 8ae:	5f e3       	ldi	r21, 0x3F	; 63
 8b0:	0e 94 ad 04 	call	0x95a	; 0x95a <__mulsf3x>
 8b4:	af 2d       	mov	r26, r15
 8b6:	98 01       	movw	r18, r16
 8b8:	ae 01       	movw	r20, r28
 8ba:	ff 90       	pop	r15
 8bc:	0f 91       	pop	r16
 8be:	1f 91       	pop	r17
 8c0:	cf 91       	pop	r28
 8c2:	df 91       	pop	r29
 8c4:	0e 94 1f 05 	call	0xa3e	; 0xa3e <__addsf3x>
 8c8:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__fp_round>

000008cc <modf>:
 8cc:	fa 01       	movw	r30, r20
 8ce:	dc 01       	movw	r26, r24
 8d0:	aa 0f       	add	r26, r26
 8d2:	bb 1f       	adc	r27, r27
 8d4:	9b 01       	movw	r18, r22
 8d6:	ac 01       	movw	r20, r24
 8d8:	bf 57       	subi	r27, 0x7F	; 127
 8da:	28 f4       	brcc	.+10     	; 0x8e6 <modf+0x1a>
 8dc:	22 27       	eor	r18, r18
 8de:	33 27       	eor	r19, r19
 8e0:	44 27       	eor	r20, r20
 8e2:	50 78       	andi	r21, 0x80	; 128
 8e4:	20 c0       	rjmp	.+64     	; 0x926 <__stack+0x27>
 8e6:	b7 51       	subi	r27, 0x17	; 23
 8e8:	90 f4       	brcc	.+36     	; 0x90e <__stack+0xf>
 8ea:	ab 2f       	mov	r26, r27
 8ec:	00 24       	eor	r0, r0
 8ee:	46 95       	lsr	r20
 8f0:	37 95       	ror	r19
 8f2:	27 95       	ror	r18
 8f4:	01 1c       	adc	r0, r1
 8f6:	a3 95       	inc	r26
 8f8:	d2 f3       	brmi	.-12     	; 0x8ee <modf+0x22>
 8fa:	00 20       	and	r0, r0
 8fc:	71 f0       	breq	.+28     	; 0x91a <__stack+0x1b>
 8fe:	22 0f       	add	r18, r18
 900:	33 1f       	adc	r19, r19
 902:	44 1f       	adc	r20, r20
 904:	b3 95       	inc	r27
 906:	da f3       	brmi	.-10     	; 0x8fe <modf+0x32>
 908:	0e d0       	rcall	.+28     	; 0x926 <__stack+0x27>
 90a:	0c 94 07 05 	jmp	0xa0e	; 0xa0e <__subsf3>
 90e:	61 30       	cpi	r22, 0x01	; 1
 910:	71 05       	cpc	r23, r1
 912:	a0 e8       	ldi	r26, 0x80	; 128
 914:	8a 07       	cpc	r24, r26
 916:	b9 46       	sbci	r27, 0x69	; 105
 918:	30 f4       	brcc	.+12     	; 0x926 <__stack+0x27>
 91a:	9b 01       	movw	r18, r22
 91c:	ac 01       	movw	r20, r24
 91e:	66 27       	eor	r22, r22
 920:	77 27       	eor	r23, r23
 922:	88 27       	eor	r24, r24
 924:	90 78       	andi	r25, 0x80	; 128
 926:	30 96       	adiw	r30, 0x00	; 0
 928:	21 f0       	breq	.+8      	; 0x932 <__stack+0x33>
 92a:	20 83       	st	Z, r18
 92c:	31 83       	std	Z+1, r19	; 0x01
 92e:	42 83       	std	Z+2, r20	; 0x02
 930:	53 83       	std	Z+3, r21	; 0x03
 932:	08 95       	ret

00000934 <__mulsf3>:
 934:	0e 94 ad 04 	call	0x95a	; 0x95a <__mulsf3x>
 938:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__fp_round>
 93c:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__fp_pscA>
 940:	38 f0       	brcs	.+14     	; 0x950 <__mulsf3+0x1c>
 942:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__fp_pscB>
 946:	20 f0       	brcs	.+8      	; 0x950 <__mulsf3+0x1c>
 948:	95 23       	and	r25, r21
 94a:	11 f0       	breq	.+4      	; 0x950 <__mulsf3+0x1c>
 94c:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <__fp_inf>
 950:	0c 94 d8 02 	jmp	0x5b0	; 0x5b0 <__fp_nan>
 954:	11 24       	eor	r1, r1
 956:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__fp_szero>

0000095a <__mulsf3x>:
 95a:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <__fp_split3>
 95e:	70 f3       	brcs	.-36     	; 0x93c <__mulsf3+0x8>

00000960 <__mulsf3_pse>:
 960:	95 9f       	mul	r25, r21
 962:	c1 f3       	breq	.-16     	; 0x954 <__mulsf3+0x20>
 964:	95 0f       	add	r25, r21
 966:	50 e0       	ldi	r21, 0x00	; 0
 968:	55 1f       	adc	r21, r21
 96a:	62 9f       	mul	r22, r18
 96c:	f0 01       	movw	r30, r0
 96e:	72 9f       	mul	r23, r18
 970:	bb 27       	eor	r27, r27
 972:	f0 0d       	add	r31, r0
 974:	b1 1d       	adc	r27, r1
 976:	63 9f       	mul	r22, r19
 978:	aa 27       	eor	r26, r26
 97a:	f0 0d       	add	r31, r0
 97c:	b1 1d       	adc	r27, r1
 97e:	aa 1f       	adc	r26, r26
 980:	64 9f       	mul	r22, r20
 982:	66 27       	eor	r22, r22
 984:	b0 0d       	add	r27, r0
 986:	a1 1d       	adc	r26, r1
 988:	66 1f       	adc	r22, r22
 98a:	82 9f       	mul	r24, r18
 98c:	22 27       	eor	r18, r18
 98e:	b0 0d       	add	r27, r0
 990:	a1 1d       	adc	r26, r1
 992:	62 1f       	adc	r22, r18
 994:	73 9f       	mul	r23, r19
 996:	b0 0d       	add	r27, r0
 998:	a1 1d       	adc	r26, r1
 99a:	62 1f       	adc	r22, r18
 99c:	83 9f       	mul	r24, r19
 99e:	a0 0d       	add	r26, r0
 9a0:	61 1d       	adc	r22, r1
 9a2:	22 1f       	adc	r18, r18
 9a4:	74 9f       	mul	r23, r20
 9a6:	33 27       	eor	r19, r19
 9a8:	a0 0d       	add	r26, r0
 9aa:	61 1d       	adc	r22, r1
 9ac:	23 1f       	adc	r18, r19
 9ae:	84 9f       	mul	r24, r20
 9b0:	60 0d       	add	r22, r0
 9b2:	21 1d       	adc	r18, r1
 9b4:	82 2f       	mov	r24, r18
 9b6:	76 2f       	mov	r23, r22
 9b8:	6a 2f       	mov	r22, r26
 9ba:	11 24       	eor	r1, r1
 9bc:	9f 57       	subi	r25, 0x7F	; 127
 9be:	50 40       	sbci	r21, 0x00	; 0
 9c0:	9a f0       	brmi	.+38     	; 0x9e8 <__mulsf3_pse+0x88>
 9c2:	f1 f0       	breq	.+60     	; 0xa00 <__mulsf3_pse+0xa0>
 9c4:	88 23       	and	r24, r24
 9c6:	4a f0       	brmi	.+18     	; 0x9da <__mulsf3_pse+0x7a>
 9c8:	ee 0f       	add	r30, r30
 9ca:	ff 1f       	adc	r31, r31
 9cc:	bb 1f       	adc	r27, r27
 9ce:	66 1f       	adc	r22, r22
 9d0:	77 1f       	adc	r23, r23
 9d2:	88 1f       	adc	r24, r24
 9d4:	91 50       	subi	r25, 0x01	; 1
 9d6:	50 40       	sbci	r21, 0x00	; 0
 9d8:	a9 f7       	brne	.-22     	; 0x9c4 <__mulsf3_pse+0x64>
 9da:	9e 3f       	cpi	r25, 0xFE	; 254
 9dc:	51 05       	cpc	r21, r1
 9de:	80 f0       	brcs	.+32     	; 0xa00 <__mulsf3_pse+0xa0>
 9e0:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <__fp_inf>
 9e4:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__fp_szero>
 9e8:	5f 3f       	cpi	r21, 0xFF	; 255
 9ea:	e4 f3       	brlt	.-8      	; 0x9e4 <__mulsf3_pse+0x84>
 9ec:	98 3e       	cpi	r25, 0xE8	; 232
 9ee:	d4 f3       	brlt	.-12     	; 0x9e4 <__mulsf3_pse+0x84>
 9f0:	86 95       	lsr	r24
 9f2:	77 95       	ror	r23
 9f4:	67 95       	ror	r22
 9f6:	b7 95       	ror	r27
 9f8:	f7 95       	ror	r31
 9fa:	e7 95       	ror	r30
 9fc:	9f 5f       	subi	r25, 0xFF	; 255
 9fe:	c1 f7       	brne	.-16     	; 0x9f0 <__mulsf3_pse+0x90>
 a00:	fe 2b       	or	r31, r30
 a02:	88 0f       	add	r24, r24
 a04:	91 1d       	adc	r25, r1
 a06:	96 95       	lsr	r25
 a08:	87 95       	ror	r24
 a0a:	97 f9       	bld	r25, 7
 a0c:	08 95       	ret

00000a0e <__subsf3>:
 a0e:	50 58       	subi	r21, 0x80	; 128

00000a10 <__addsf3>:
 a10:	bb 27       	eor	r27, r27
 a12:	aa 27       	eor	r26, r26
 a14:	0e 94 1f 05 	call	0xa3e	; 0xa3e <__addsf3x>
 a18:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__fp_round>
 a1c:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__fp_pscA>
 a20:	38 f0       	brcs	.+14     	; 0xa30 <__addsf3+0x20>
 a22:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__fp_pscB>
 a26:	20 f0       	brcs	.+8      	; 0xa30 <__addsf3+0x20>
 a28:	39 f4       	brne	.+14     	; 0xa38 <__addsf3+0x28>
 a2a:	9f 3f       	cpi	r25, 0xFF	; 255
 a2c:	19 f4       	brne	.+6      	; 0xa34 <__addsf3+0x24>
 a2e:	26 f4       	brtc	.+8      	; 0xa38 <__addsf3+0x28>
 a30:	0c 94 d8 02 	jmp	0x5b0	; 0x5b0 <__fp_nan>
 a34:	0e f4       	brtc	.+2      	; 0xa38 <__addsf3+0x28>
 a36:	e0 95       	com	r30
 a38:	e7 fb       	bst	r30, 7
 a3a:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <__fp_inf>

00000a3e <__addsf3x>:
 a3e:	e9 2f       	mov	r30, r25
 a40:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <__fp_split3>
 a44:	58 f3       	brcs	.-42     	; 0xa1c <__addsf3+0xc>
 a46:	ba 17       	cp	r27, r26
 a48:	62 07       	cpc	r22, r18
 a4a:	73 07       	cpc	r23, r19
 a4c:	84 07       	cpc	r24, r20
 a4e:	95 07       	cpc	r25, r21
 a50:	20 f0       	brcs	.+8      	; 0xa5a <__addsf3x+0x1c>
 a52:	79 f4       	brne	.+30     	; 0xa72 <__addsf3x+0x34>
 a54:	a6 f5       	brtc	.+104    	; 0xabe <__addsf3x+0x80>
 a56:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_zero>
 a5a:	0e f4       	brtc	.+2      	; 0xa5e <__addsf3x+0x20>
 a5c:	e0 95       	com	r30
 a5e:	0b 2e       	mov	r0, r27
 a60:	ba 2f       	mov	r27, r26
 a62:	a0 2d       	mov	r26, r0
 a64:	0b 01       	movw	r0, r22
 a66:	b9 01       	movw	r22, r18
 a68:	90 01       	movw	r18, r0
 a6a:	0c 01       	movw	r0, r24
 a6c:	ca 01       	movw	r24, r20
 a6e:	a0 01       	movw	r20, r0
 a70:	11 24       	eor	r1, r1
 a72:	ff 27       	eor	r31, r31
 a74:	59 1b       	sub	r21, r25
 a76:	99 f0       	breq	.+38     	; 0xa9e <__addsf3x+0x60>
 a78:	59 3f       	cpi	r21, 0xF9	; 249
 a7a:	50 f4       	brcc	.+20     	; 0xa90 <__addsf3x+0x52>
 a7c:	50 3e       	cpi	r21, 0xE0	; 224
 a7e:	68 f1       	brcs	.+90     	; 0xada <__addsf3x+0x9c>
 a80:	1a 16       	cp	r1, r26
 a82:	f0 40       	sbci	r31, 0x00	; 0
 a84:	a2 2f       	mov	r26, r18
 a86:	23 2f       	mov	r18, r19
 a88:	34 2f       	mov	r19, r20
 a8a:	44 27       	eor	r20, r20
 a8c:	58 5f       	subi	r21, 0xF8	; 248
 a8e:	f3 cf       	rjmp	.-26     	; 0xa76 <__addsf3x+0x38>
 a90:	46 95       	lsr	r20
 a92:	37 95       	ror	r19
 a94:	27 95       	ror	r18
 a96:	a7 95       	ror	r26
 a98:	f0 40       	sbci	r31, 0x00	; 0
 a9a:	53 95       	inc	r21
 a9c:	c9 f7       	brne	.-14     	; 0xa90 <__addsf3x+0x52>
 a9e:	7e f4       	brtc	.+30     	; 0xabe <__addsf3x+0x80>
 aa0:	1f 16       	cp	r1, r31
 aa2:	ba 0b       	sbc	r27, r26
 aa4:	62 0b       	sbc	r22, r18
 aa6:	73 0b       	sbc	r23, r19
 aa8:	84 0b       	sbc	r24, r20
 aaa:	ba f0       	brmi	.+46     	; 0xada <__addsf3x+0x9c>
 aac:	91 50       	subi	r25, 0x01	; 1
 aae:	a1 f0       	breq	.+40     	; 0xad8 <__addsf3x+0x9a>
 ab0:	ff 0f       	add	r31, r31
 ab2:	bb 1f       	adc	r27, r27
 ab4:	66 1f       	adc	r22, r22
 ab6:	77 1f       	adc	r23, r23
 ab8:	88 1f       	adc	r24, r24
 aba:	c2 f7       	brpl	.-16     	; 0xaac <__addsf3x+0x6e>
 abc:	0e c0       	rjmp	.+28     	; 0xada <__addsf3x+0x9c>
 abe:	ba 0f       	add	r27, r26
 ac0:	62 1f       	adc	r22, r18
 ac2:	73 1f       	adc	r23, r19
 ac4:	84 1f       	adc	r24, r20
 ac6:	48 f4       	brcc	.+18     	; 0xada <__addsf3x+0x9c>
 ac8:	87 95       	ror	r24
 aca:	77 95       	ror	r23
 acc:	67 95       	ror	r22
 ace:	b7 95       	ror	r27
 ad0:	f7 95       	ror	r31
 ad2:	9e 3f       	cpi	r25, 0xFE	; 254
 ad4:	08 f0       	brcs	.+2      	; 0xad8 <__addsf3x+0x9a>
 ad6:	b0 cf       	rjmp	.-160    	; 0xa38 <__addsf3+0x28>
 ad8:	93 95       	inc	r25
 ada:	88 0f       	add	r24, r24
 adc:	08 f0       	brcs	.+2      	; 0xae0 <__addsf3x+0xa2>
 ade:	99 27       	eor	r25, r25
 ae0:	ee 0f       	add	r30, r30
 ae2:	97 95       	ror	r25
 ae4:	87 95       	ror	r24
 ae6:	08 95       	ret

00000ae8 <__fp_mpack>:
 ae8:	9f 3f       	cpi	r25, 0xFF	; 255
 aea:	31 f0       	breq	.+12     	; 0xaf8 <__fp_mpack_finite+0xc>

00000aec <__fp_mpack_finite>:
 aec:	91 50       	subi	r25, 0x01	; 1
 aee:	20 f4       	brcc	.+8      	; 0xaf8 <__fp_mpack_finite+0xc>
 af0:	87 95       	ror	r24
 af2:	77 95       	ror	r23
 af4:	67 95       	ror	r22
 af6:	b7 95       	ror	r27
 af8:	88 0f       	add	r24, r24
 afa:	91 1d       	adc	r25, r1
 afc:	96 95       	lsr	r25
 afe:	87 95       	ror	r24
 b00:	97 f9       	bld	r25, 7
 b02:	08 95       	ret

00000b04 <__umulhisi3>:
 b04:	a2 9f       	mul	r26, r18
 b06:	b0 01       	movw	r22, r0
 b08:	b3 9f       	mul	r27, r19
 b0a:	c0 01       	movw	r24, r0
 b0c:	a3 9f       	mul	r26, r19
 b0e:	70 0d       	add	r23, r0
 b10:	81 1d       	adc	r24, r1
 b12:	11 24       	eor	r1, r1
 b14:	91 1d       	adc	r25, r1
 b16:	b2 9f       	mul	r27, r18
 b18:	70 0d       	add	r23, r0
 b1a:	81 1d       	adc	r24, r1
 b1c:	11 24       	eor	r1, r1
 b1e:	91 1d       	adc	r25, r1
 b20:	08 95       	ret

00000b22 <_exit>:
 b22:	f8 94       	cli

00000b24 <__stop_program>:
 b24:	ff cf       	rjmp	.-2      	; 0xb24 <__stop_program>
